version: 1

app:
  env: dev
  mode: debug # Mode is either debug or release
  port: 8081

snowplow: # Snowplow events
  enabled: true
  standardRoutesEnabled: true
  openRedirectsEnabled: true
  getPath: /plw/g
  postPath: /plw/p
  redirectPath: /plw/r

generic: # Generic self describing events
  enabled: true
  postPath: /gen/p
  batchPostPath: /gen/bp
  contexts:
    rootKey: contexts
    schemaKey: schema
    dataKey: payload
  event:
    rootKey: payload
    schemaKey: schema
    dataKey: payload

cookie:
  name: sp-nuid
  secure: False
  ttlDays: 365
  domain: localhost
  path: /
  sameSite: Lax

cors:
  allowOrigin:
    - "*"
  allowCredentials: true
  allowMethods:
    - POST
    - OPTIONS
    - GET
  maxAge: 86400

anonymize:
  ip: false
  userId: false

schemaCache:
  schemaCacheBackend:
    type: gcs
    bucket: BUCKET_NAME
    path: /
  ttlSeconds: 300
  maxSizeBytes: 104857600 # 100mb -> 100 * 1024 * 1024

# ============================================================
# Example schema cache with GCS backend
# schemaCache:
#   schemaCacheBackend:
#     type: s3
#     bucket: BUCKET_NAME
#     path: /
#   ttlSeconds: 300
#   maxSizeBytes: 104857600 # 100mb -> 100 * 1024 * 1024
# ============================================================

forwarder:
  type: kafka
  brokers:
    - BROKER_1:9092
    - BROKER_2:9092
    - BROKER_3:9092
  validEventTopic: VALID_EVENT_TOPIC_NAME
  invalidEventTopic: INVALID_EVENT_TOPIC_NAME

# ============================================================
# Example pubsub forwarder config
# forwarder:
#   type: pubsub
#   project: PROJECT_NAME_HERE
#   validEventTopic: VALID_EVENT_TOPIC_NAME
#   invalidEventTopic: INVALID_EVENT_TOPIC_NAME
# ============================================================

tele:
  enable: true
