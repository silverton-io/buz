name: Publish Honeypot image to ghcr.io

on:
  push:
    branches: ['gcp-img']

env:
  GH_REGISTRY: ghcr.io
  GCP_REGISTRY: us-east1-docker.pkg.dev/silverton-io/docker
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Get Version from file
        id: get-version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./.VERSION

      - name: Authenticate to Google Cloud
        id: auth-gcloud
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/860234713891/locations/global/workloadIdentityPools/honeypot-github/providers/github'
          service_account: 'honeypot-ci@silverton-io.iam.gserviceaccount.com'
          create_credentials_file: true

      - name: Configure Docker
        shell: bash
        run: |
          gcloud auth configure-docker --quiet

      - name: Set up build cache
        uses: actions/cache@v2
        with:
          path: /tmp/.build-cache
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Set up Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./deploy/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          # platforms: linux/amd64, linux/arm64
          platforms: linux/amd64
          push: true
          cache-from: type=local,src=/tmp/.build-cache
          cache-to: type=local,dest=/tmp/.build-cache
          # tags: |
          #   ${{ env.GH_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-version.outputs.content }}
          #   ${{ env.GCP_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-version.outputs.content }}
          tags: |
              ${{ env.GCP_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-version.outputs.content }}
          labels: ${{ steps.meta.outputs.labels }}
